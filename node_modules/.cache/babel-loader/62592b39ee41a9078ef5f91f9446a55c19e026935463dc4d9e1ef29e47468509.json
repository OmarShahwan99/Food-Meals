{"ast":null,"code":"var _jsxFileName = \"/media/omar/special/Projects for new course of React/theSecond/food meals/src/components/Checkout/OrderForm.js\",\n  _s2 = $RefreshSig$();\nimport classes from './OrderForm.module.css';\nimport useInput from '../../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst textValidation = value => {\n  return value.trim() !== '';\n};\nconst phoneValidation = value => {\n  return value.length === 10;\n};\nconst OrderForm = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameHasError,\n    blurHandler: nameBlurHandler,\n    valueChangeHandler: nameChangeHandler,\n    reset: resetName\n  } = useInput(textValidation);\n  const {\n    value: enteredPhone,\n    isValid: enteredPhoneIsValid,\n    hasError: phoneHasError,\n    blurHandler: phoneBlurHandler,\n    valueChangeHandler: phoneChangeHandler,\n    reset: resetPhone\n  } = useInput(phoneValidation);\n  const OrderForm = props => {\n    _s();\n    const {\n      value: enteredStreet,\n      isValid: enteredStreetIsValid,\n      hasError: streetHasError,\n      blurHandler: streetBlurHandler,\n      valueChangeHandler: streetChangeHandler,\n      reset: resetStreet\n    } = useInput(textValidation);\n    let FormIsValid = false;\n    if (enteredNameIsValid && enteredPhoneIsValid) {\n      FormIsValid = true;\n    }\n    const confirmHandler = event => {\n      event.preventDefault();\n      if (!FormIsValid) {\n        return;\n      }\n      console.log(enteredName, enteredPhone);\n      resetName();\n      resetPhone();\n    };\n    const invalidNameClasses = nameHasError ? classes.invalid : '';\n    const invalidPhoneClasses = phoneHasError ? classes.invalid : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['order-form'],\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: confirmHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: invalidNameClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            onChange: nameChangeHandler,\n            onBlur: nameBlurHandler,\n            value: enteredName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes['error-text'],\n            children: \"Invalid Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: invalidPhoneClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Your Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"phone\",\n            name: \"phone\",\n            onChange: phoneChangeHandler,\n            onBlur: phoneBlurHandler,\n            value: enteredPhone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), phoneHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes['error-text'],\n            children: \"Phone must have 10 numbers.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"street\",\n            children: \"Street\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"street\",\n            name: \"street\",\n            onChange: streetChangeHandler,\n            onBlur: streetBlurHandler,\n            value: enteredStreet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), streetHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes['error-text'],\n            children: \"Street musn't be empty.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"code\",\n            children: \"Pestal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"code\",\n            name: \"code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !FormIsValid,\n            className: classes.button,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes['button--alt'],\n            onClick: props.onCancel,\n            type: \"button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n  };\n  _s(OrderForm, \"p1aZKC9e4+7UXgKgdZHgEeyNP2M=\", false, function () {\n    return [useInput];\n  });\n};\n_s2(OrderForm, \"/Bc9h4wbD77e29uUq3ZBrPgTUsE=\", false, function () {\n  return [useInput, useInput];\n});\n_c = OrderForm;\nexport default OrderForm;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["classes","useInput","jsxDEV","_jsxDEV","textValidation","value","trim","phoneValidation","length","OrderForm","props","_s2","_s","$RefreshSig$","enteredName","isValid","enteredNameIsValid","hasError","nameHasError","blurHandler","nameBlurHandler","valueChangeHandler","nameChangeHandler","reset","resetName","enteredPhone","enteredPhoneIsValid","phoneHasError","phoneBlurHandler","phoneChangeHandler","resetPhone","enteredStreet","enteredStreetIsValid","streetHasError","streetBlurHandler","streetChangeHandler","resetStreet","FormIsValid","confirmHandler","event","preventDefault","console","log","invalidNameClasses","invalid","invalidPhoneClasses","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","onChange","onBlur","control","actions","disabled","button","onClick","onCancel","_c","$RefreshReg$"],"sources":["/media/omar/special/Projects for new course of React/theSecond/food meals/src/components/Checkout/OrderForm.js"],"sourcesContent":["import classes from './OrderForm.module.css';\nimport useInput from '../../hooks/use-input';\n\nconst textValidation = (value) => {\n    return value.trim() !== ''\n}\n\nconst phoneValidation = (value) => {\n    return value.length === 10;\n}\n\nconst OrderForm = props => {\n    const {\n        value: enteredName,\n        isValid: enteredNameIsValid,\n        hasError: nameHasError,\n        blurHandler: nameBlurHandler,\n        valueChangeHandler: nameChangeHandler,\n        reset: resetName\n    } = useInput(textValidation);\n\n    const {\n        value: enteredPhone,\n        isValid: enteredPhoneIsValid,\n        hasError: phoneHasError,\n        blurHandler: phoneBlurHandler,\n        valueChangeHandler: phoneChangeHandler,\n        reset: resetPhone\n    } = useInput(phoneValidation);\n\n    const OrderForm = props => {\n    const {\n        value: enteredStreet,\n        isValid: enteredStreetIsValid,\n        hasError: streetHasError,\n        blurHandler: streetBlurHandler,\n        valueChangeHandler: streetChangeHandler,\n        reset: resetStreet\n    } = useInput(textValidation);\n\n    let FormIsValid = false;\n\n    if (enteredNameIsValid && enteredPhoneIsValid) {\n        FormIsValid = true;\n    }\n\n    const confirmHandler = event => {\n        event.preventDefault();\n        if (!FormIsValid) {\n            return;\n        }\n        console.log(enteredName, enteredPhone);\n        resetName();\n        resetPhone();\n    }\n\n    const invalidNameClasses = nameHasError ? classes.invalid : ''\n    const invalidPhoneClasses = phoneHasError ? classes.invalid : '';\n\n    return (\n        <div className={classes['order-form']}>\n            <form onSubmit={confirmHandler}>\n                <div className={invalidNameClasses}>\n                    <label htmlFor='name'>Your Name</label>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        onChange={nameChangeHandler}\n                        onBlur={nameBlurHandler}\n                        value={enteredName}\n                    />\n                    {nameHasError && <p className={classes['error-text']}>Invalid Name</p>}\n                </div>\n                <div className={invalidPhoneClasses}>\n                    <label htmlFor='phone'>Your Phone</label>\n                    <input\n                        type=\"tel\"\n                        id=\"phone\"\n                        name=\"phone\"\n                        onChange={phoneChangeHandler}\n                        onBlur={phoneBlurHandler}\n                        value={enteredPhone}\n                    />\n                    {phoneHasError && <p className={classes['error-text']}>Phone must have 10 numbers.</p>}\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor='street'>Street</label>\n                    <input\n                        type=\"text\"\n                        id=\"street\"\n                        name=\"street\"\n                        onChange={streetChangeHandler}\n                        onBlur={streetBlurHandler}\n                        value={enteredStreet}\n                    />\n                    {streetHasError && <p className={classes['error-text']}>Street musn't be empty.</p>}\n                </div>\n                <div className={classes.control}>\n                    <label htmlFor='code'>Pestal Code</label>\n                    <input type=\"text\" id=\"code\" name=\"code\"/>\n                </div>\n                <div className={classes.actions}>\n                    <button disabled={!FormIsValid} className={classes.button}>Confirm</button>\n                    <button className={classes['button--alt']} onClick={props.onCancel} type=\"button\">Cancel</button>\n                </div>\n            </form>\n        </div>\n    )\n};}\n\nexport default OrderForm"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAC9B,OAAOA,KAAK,CAACC,IAAI,EAAE,KAAK,EAAE;AAC9B,CAAC;AAED,MAAMC,eAAe,GAAIF,KAAK,IAAK;EAC/B,OAAOA,KAAK,CAACG,MAAM,KAAK,EAAE;AAC9B,CAAC;AAED,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACvB,MAAM;IACFR,KAAK,EAAES,WAAW;IAClBC,OAAO,EAAEC,kBAAkB;IAC3BC,QAAQ,EAAEC,YAAY;IACtBC,WAAW,EAAEC,eAAe;IAC5BC,kBAAkB,EAAEC,iBAAiB;IACrCC,KAAK,EAAEC;EACX,CAAC,GAAGvB,QAAQ,CAACG,cAAc,CAAC;EAE5B,MAAM;IACFC,KAAK,EAAEoB,YAAY;IACnBV,OAAO,EAAEW,mBAAmB;IAC5BT,QAAQ,EAAEU,aAAa;IACvBR,WAAW,EAAES,gBAAgB;IAC7BP,kBAAkB,EAAEQ,kBAAkB;IACtCN,KAAK,EAAEO;EACX,CAAC,GAAG7B,QAAQ,CAACM,eAAe,CAAC;EAE7B,MAAME,SAAS,GAAGC,KAAK,IAAI;IAAAE,EAAA;IAC3B,MAAM;MACFP,KAAK,EAAE0B,aAAa;MACpBhB,OAAO,EAAEiB,oBAAoB;MAC7Bf,QAAQ,EAAEgB,cAAc;MACxBd,WAAW,EAAEe,iBAAiB;MAC9Bb,kBAAkB,EAAEc,mBAAmB;MACvCZ,KAAK,EAAEa;IACX,CAAC,GAAGnC,QAAQ,CAACG,cAAc,CAAC;IAE5B,IAAIiC,WAAW,GAAG,KAAK;IAEvB,IAAIrB,kBAAkB,IAAIU,mBAAmB,EAAE;MAC3CW,WAAW,GAAG,IAAI;IACtB;IAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;MAC5BA,KAAK,CAACC,cAAc,EAAE;MACtB,IAAI,CAACH,WAAW,EAAE;QACd;MACJ;MACAI,OAAO,CAACC,GAAG,CAAC5B,WAAW,EAAEW,YAAY,CAAC;MACtCD,SAAS,EAAE;MACXM,UAAU,EAAE;IAChB,CAAC;IAED,MAAMa,kBAAkB,GAAGzB,YAAY,GAAGlB,OAAO,CAAC4C,OAAO,GAAG,EAAE;IAC9D,MAAMC,mBAAmB,GAAGlB,aAAa,GAAG3B,OAAO,CAAC4C,OAAO,GAAG,EAAE;IAEhE,oBACIzC,OAAA;MAAK2C,SAAS,EAAE9C,OAAO,CAAC,YAAY,CAAE;MAAA+C,QAAA,eAClC5C,OAAA;QAAM6C,QAAQ,EAAEV,cAAe;QAAAS,QAAA,gBAC3B5C,OAAA;UAAK2C,SAAS,EAAEH,kBAAmB;UAAAI,QAAA,gBAC/B5C,OAAA;YAAO8C,OAAO,EAAC,MAAM;YAAAF,QAAA,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACvClD,OAAA;YACImD,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,MAAM;YACTC,IAAI,EAAC,MAAM;YACXC,QAAQ,EAAEnC,iBAAkB;YAC5BoC,MAAM,EAAEtC,eAAgB;YACxBf,KAAK,EAAES;UAAY;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACrB,EACDnC,YAAY,iBAAIf,OAAA;YAAG2C,SAAS,EAAE9C,OAAO,CAAC,YAAY,CAAE;YAAA+C,QAAA,EAAC;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACpE,eACNlD,OAAA;UAAK2C,SAAS,EAAED,mBAAoB;UAAAE,QAAA,gBAChC5C,OAAA;YAAO8C,OAAO,EAAC,OAAO;YAAAF,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACzClD,OAAA;YACImD,IAAI,EAAC,KAAK;YACVC,EAAE,EAAC,OAAO;YACVC,IAAI,EAAC,OAAO;YACZC,QAAQ,EAAE5B,kBAAmB;YAC7B6B,MAAM,EAAE9B,gBAAiB;YACzBvB,KAAK,EAAEoB;UAAa;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACtB,EACD1B,aAAa,iBAAIxB,OAAA;YAAG2C,SAAS,EAAE9C,OAAO,CAAC,YAAY,CAAE;YAAA+C,QAAA,EAAC;UAA2B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACpF,eACNlD,OAAA;UAAK2C,SAAS,EAAE9C,OAAO,CAAC2D,OAAQ;UAAAZ,QAAA,gBAC5B5C,OAAA;YAAO8C,OAAO,EAAC,QAAQ;YAAAF,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACtClD,OAAA;YACImD,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,QAAQ;YACXC,IAAI,EAAC,QAAQ;YACbC,QAAQ,EAAEtB,mBAAoB;YAC9BuB,MAAM,EAAExB,iBAAkB;YAC1B7B,KAAK,EAAE0B;UAAc;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACvB,EACDpB,cAAc,iBAAI9B,OAAA;YAAG2C,SAAS,EAAE9C,OAAO,CAAC,YAAY,CAAE;YAAA+C,QAAA,EAAC;UAAuB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjF,eACNlD,OAAA;UAAK2C,SAAS,EAAE9C,OAAO,CAAC2D,OAAQ;UAAAZ,QAAA,gBAC5B5C,OAAA;YAAO8C,OAAO,EAAC,MAAM;YAAAF,QAAA,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACzClD,OAAA;YAAOmD,IAAI,EAAC,MAAM;YAACC,EAAE,EAAC,MAAM;YAACC,IAAI,EAAC;UAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACxC,eACNlD,OAAA;UAAK2C,SAAS,EAAE9C,OAAO,CAAC4D,OAAQ;UAAAb,QAAA,gBAC5B5C,OAAA;YAAQ0D,QAAQ,EAAE,CAACxB,WAAY;YAACS,SAAS,EAAE9C,OAAO,CAAC8D,MAAO;YAAAf,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eAC3ElD,OAAA;YAAQ2C,SAAS,EAAE9C,OAAO,CAAC,aAAa,CAAE;YAAC+D,OAAO,EAAErD,KAAK,CAACsD,QAAS;YAACV,IAAI,EAAC,QAAQ;YAAAP,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC/F;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL;EAEd,CAAC;EAACzC,EAAA,CA/EQH,SAAS;IAAA,QAQXR,QAAQ;EAAA;AAuEd,CAAC;AAAAU,GAAA,CAlGGF,SAAS;EAAA,QAQPR,QAAQ,EASRA,QAAQ;AAAA;AAAAgE,EAAA,GAjBVxD,SAAS;AAoGf,eAAeA,SAAS;AAAA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}